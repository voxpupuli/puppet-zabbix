# this file is managed by puppet
# do not edit this file.
# this is a config file for zabbix agent (unix)
# to get more information about zabbix, visit http://www.zabbix.com

############ GENERAL PARAMETERS #################

<% if @pidfile and @kernel != 'windows'%>
### Option: PidFile
#	Name of PID file.
#
# Mandatory: no
PidFile=<%= @pidfile %><% end %>

<% if @logtype %>
### Option: LogType
#	Specifies where log messages are written to:
#		system  - syslog
#		file    - file specified with LogFile parameter
#		console - standard output
#
# Mandatory: no
LogType=<%= @logtype %><% end %>

<% if @logtype == 'file' -%>
### Option: LogFile
#	Log file name for LogType 'file' parameter.
#
# Mandatory: yes, if LogType is set to file, otherwise no
LogFile=<%= @logfile %>

### Option: LogFileSize
#	Maximum size of log file in MB.
#	0 - disable automatic log rotation.
#
# Mandatory: no
# Range: 0-1024
LogFileSize=<%= @logfilesize %><% end -%>

### Option: DebugLevel
#	Specifies debug level:
#	0 - basic information about starting and stopping of Zabbix processes
#	1 - critical information
#	2 - error information
#	3 - warnings
#	4 - for debugging (produces lots of information)
#	5 - extended debugging (produces even more information)
#
# Mandatory: no
# Range: 0-5
DebugLevel=<%= @debuglevel %>


### Option: SourceIP
#	Source IP address for outgoing connections.
#
# Mandatory: no
<% if @sourceip %>SourceIP=<%= @sourceip %><% end %>

<%  if @zabbix_version.to_f >= 5.0 %>
### Option: AllowKey
#	Allow execution of item keys matching pattern.
#	Multiple keys matching rules may be defined in combination with DenyKey.
#	Key pattern is wildcard expression, which support "*" character to match any number of any characters in certain position. It might be used in both key name and key arguments.
#	Parameters are processed one by one according their appearance order.
#	If no AllowKey or DenyKey rules defined, all keys are allowed.
#
# Mandatory: no
<%    if @allowkey %>AllowKey=<%= @allowkey -%><% end %>

### Option: DenyKey
#	Deny execution of items keys matching pattern.
#	Multiple keys matching rules may be defined in combination with AllowKey.
#	Key pattern is wildcard expression, which support "*" character to match any number of any characters in certain position. It might be used in both key name and key arguments.
#	Parameters are processed one by one according their appearance order.
#	If no AllowKey or DenyKey rules defined, all keys are allowed.
#       Unless another system.run[*] rule is specified DenyKey=system.run[*] is added by default.
#
# Mandatory: no
<%    if @denykey %>DenyKey=<%= @denykey -%><% end %>
<%  end %>
<% unless @agent2 %>

### Option: EnableRemoteCommands - Deprecated, use AllowKey=system.run[*] or DenyKey=system.run[*] instead
#	Internal alias for AllowKey/DenyKey parameters depending on value:
#	0 - DenyKey=system.run[*]
#	1 - AllowKey=system.run[*]
#
# Mandatory: no
EnableRemoteCommands=<%= @enableremotecommands %>

### Option: LogRemoteCommands
#	Enable logging of executed shell commands as warnings.
#	0 - disabled
#	1 - enabled
#
# Mandatory: no
LogRemoteCommands=<%= @logremotecommands %>
<% end %>


##### Passive checks related

### Option: Server
#	List of comma delimited IP addresses, optionally in CIDR notation, or DNS names of Zabbix servers and Zabbix proxies.
#	Incoming connections will be accepted only from the hosts listed here.
#	If IPv6 support is enabled then '127.0.0.1', '::127.0.0.1', '::ffff:127.0.0.1' are treated equally
#	and '::/0' will allow any IPv4 or IPv6 address.
#	'0.0.0.0/0' can be used to allow any IPv4 address.
#	Example: Server=127.0.0.1,192.168.1.0/24,::1,2001:db8::/32,zabbix.example.com
#
# Mandatory: yes, if StartAgents is not explicitly set to 0
Server=<%= @server %>

### Option: ListenPort
#	Agent will listen on this port for connections from the server.
#
# Mandatory: no
# Range: 1024-32767
ListenPort=<%= @listenport %>

### Option: ListenIP
#	List of comma delimited IP addresses that the agent should listen on.
#	First IP address is sent to Zabbix server if connecting to it to retrieve list of active checks.
#
# Mandatory: no
<% if @listen_ip %>ListenIP=<%= @listen_ip %><% end %>

### Option: StatusPort
#       Agent will listen on this port for HTTP status requests.
#
# Mandatory: no
# Range: 1024-32767
<% if @statusport %>StatusPort=<%= @statusport %><% end %>

<% unless @agent2 %>
### Option: StartAgents
#	Number of pre-forked instances of zabbix_agentd that process passive checks.
#	If set to 0, disables passive checks and the agent will not listen on any TCP port.
#
# Mandatory: no
# Range: 0-100
StartAgents=<%= @startagents %>
<% end %>

##### Active checks related

### Option: ServerActive
#	Zabbix server/proxy address or cluster configuration to get active checks from.
#	Server/proxy address is IP address or DNS name and optional port separated by colon.
#	Cluster configuration is one or more server addresses separated by semicolon.
#	Multiple Zabbix servers/clusters and Zabbix proxies can be specified, separated by comma.
#	More than one Zabbix proxy should not be specified from each Zabbix server/cluster.
#	If Zabbix proxy is specified then Zabbix server/cluster for that proxy should not be specified.
#	Multiple comma-delimited addresses can be provided to use several independent Zabbix servers in parallel. Spaces are allowed.
#	If port is not specified, default port is used.
#	IPv6 addresses must be enclosed in square brackets if port for that host is specified.
#	If port is not specified, square brackets for IPv6 addresses are optional.
#	If this parameter is not specified, active checks are disabled.
#	Example for Zabbix proxy:
#		ServerActive=127.0.0.1:10051
#	Example for multiple servers:
#		ServerActive=127.0.0.1:20051,zabbix.domain,[::1]:30051,::1,[12fc::1]
#	Example for high availability:
#		ServerActive=zabbix.cluster.node1;zabbix.cluster.node2:20051;zabbix.cluster.node3
#	Example for high availability with two clusters and one server:
#		ServerActive=zabbix.cluster.node1;zabbix.cluster.node2:20051,zabbix.cluster2.node1;zabbix.cluster2.node2,zabbix.domain
#
# Mandatory: no
<% if @serveractive %>ServerActive=<%= @serveractive %><% end %>

### Option: Hostname
#	Unique, case sensitive hostname.
#	Required for active checks and must match hostname as configured on the server.
#	Value is acquired from HostnameItem if undefined.
#
<% if @hostname %>Hostname=<%= @hostname %><% end %>

### Option: HostnameItem
#	Item used for generating Hostname if it is undefined. Ignored if Hostname is defined.
#	Does not support UserParameters or aliases.
#
# Mandatory: no
<% if !@hostname %>HostnameItem=<%= @hostnameitem %><% end %>

### Option: HostMetadata
#	Optional parameter that defines host metadata.
#	Host metadata is used at host auto-registration process.
#	An agent will issue an error and not start if the value is over limit of 2034 bytes.
#	If not defined, value will be acquired from HostMetadataItem.
#
# Mandatory: no
# Range: 0-2034 bytes
<% if @hostmetadata %>HostMetadata=<%= @hostmetadata %><% end %>

### Option: HostMetadataItem
#	Optional parameter that defines an item used for getting host metadata.
#	Host metadata is used at host auto-registration process.
#	During an auto-registration request an agent will log a warning message if
#	the value returned by specified item is over limit of 65535 characters.
#	This option is only used when HostMetadata is not defined.
#
# Mandatory: no
<% if @hostmetadataitem %>HostMetadataItem=<%= @hostmetadataitem %><% end %>

### Option: HostInterface
#	Optional parameter that defines host interface.
#	Host interface is used at host auto-registration process.
#	An agent will issue an error and not start if the value is over limit of 255 characters.
#	If not defined, value will be acquired from HostInterfaceItem.
#
# Mandatory: no
# Range: 0-255 characters
<% if @hostinterface %>HostInterface=<%= @hostinterface %><% end %>

### Option: HostInterfaceItem
#	Optional parameter that defines an item used for getting host interface.
#	Host interface is used at host auto-registration process.
#	During an auto-registration request an agent will log a warning message if
#	the value returned by specified item is over limit of 255 characters.
#	This option is only used when HostInterface is not defined.
#
# Mandatory: no
<% if @hostinterfaceitem %>HostInterfaceItem=<%= @hostinterfaceitem %><% end %>

### Option: HostInterfaceItem
#	Optional parameter that defines an item used for getting host interface.
#	Host interface is used at host auto-registration process.
#	During an auto-registration request an agent will log a warning message if
#	the value returned by specified item is over limit of 255 characters.
#	This option is only used when HostInterface is not defined.
#
# Mandatory: no
RefreshActiveChecks=<%= @refreshactivechecks %>

### Option: BufferSend
#	Do not keep data longer than N seconds in buffer.
#
# Mandatory: no
# Range: 1-3600
BufferSend=<%= @buffersend %>

### Option: BufferSize
#	Maximum number of values in a memory buffer. The agent will send
#	all collected data to Zabbix Server or Proxy if the buffer is full.
#
# Mandatory: no
# Range: 2-65535
BufferSize=<%= @buffersize %>

### Option: EnablePersistentBuffer:
#       0 - disabled, in-memory buffer is used (default); 
#       1 - use persistent buffer
# Mandatory: no
# Range: 0-1
<% if @enablepersistentbuffer  %>EnablePersistentBuffer=<%= @enablepersistentbuffer %><% end %>

<% unless @enablepersistentbuffer %>
### Option: PersistentBufferPeriod
#       Zabbix Agent2 will keep data for this time period in case of no
#       connectivity with Zabbix server or proxy. Older data will be lost. Log data will be preserved.
#       Option is valid if EnablePersistentBuffer=1
#
# Mandatory: no
# Range: 1m-365d
<% if @persistentbufferperiod %>PersistentBufferPeriod=<%= @persistentbufferperiod %><% end %>

### Option: PersistentBufferFile
#       full filename. Zabbix Agent2 will keep SQLite database in this file
#       Option is valid if EnablePersistentBuffer=1
#
# Mandatory: no
<% if @persistentbufferfile %>PersistentBufferFile=<%= @persistentbufferfile %><% end %>

<% end %>
<% unless @agent2 %>
### Option: MaxLinesPerSecond
#	Maximum number of new lines the agent will send per second to Zabbix Server
#	or Proxy processing 'log' and 'logrt' active checks.
#	The provided value will be overridden by the parameter 'maxlines',
#	provided in 'log' or 'logrt' item keys.
#
# Mandatory: no
# Range: 1-1000
MaxLinesPerSecond=<%= @maxlinespersecond %>
<% end %>

############ ADVANCED PARAMETERS #################

### Option: Alias
#	Sets an alias for an item key. It can be used to substitute long and complex item key with a smaller and simpler one.
#	Multiple Alias parameters may be present. Multiple parameters with the same Alias key are not allowed.
#	Different Alias keys may reference the same item key.
#	For example, to retrieve the ID of user 'zabbix':
#	Alias=zabbix.userid:vfs.file.regexp[/etc/passwd,^zabbix:.:([0-9]+),,,,\1]
#	Now shorthand key zabbix.userid may be used to retrieve data.
#	Aliases can be used in HostMetadataItem but not in HostnameItem parameters.
#
# Mandatory: no
<% if @zabbix_alias %>
        <%- @zabbix_alias.each do |zalias| -%>Alias=<%= zalias %>
        <%- end -%>
<% end %>


### Option: Timeout
#	Specifies timeout for communications (in seconds).
#
# Mandatory: no
# Range: 1-30
Timeout=<%= @timeout %>

<% if @kernel != 'windows' and !@agent2 %>
### Option: AllowRoot
#	Allow the agent to run as 'root'. If disabled and the agent is started by 'root', the agent
#	will try to switch to the user specified by the User configuration option instead.
#	Has no effect if started under a regular user.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
AllowRoot=<%= @allowroot %>

### Option: User
#	Drop privileges to a specific, existing user on the system.
#	Only has effect if run as 'root' and AllowRoot is disabled.
#
# Mandatory: no
<% if @zabbix_user %>User=<%= @zabbix_user %><% end %>
<% end %>

### Option: Include
#	You may include individual files or all files in a directory in the configuration file.
#	Installing Zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
#
# Mandatory: no
Include=<%= @include_dir %>


####### USER-DEFINED MONITORED PARAMETERS #######

### Option: UnsafeUserParameters
#	Allow all characters to be passed in arguments to user-defined parameters.
#	The following characters are not allowed:
#	\ ' " ` * ? [ ] { } ~ $ ! & ; ( ) < > | # @
#	Additionally, newline characters are not allowed.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
# Range: 0-1
UnsafeUserParameters=<%= @unsafeuserparameters %>

### Option: UserParameter
#	User-defined parameter to monitor. There can be several user-defined parameters.
#	Format: UserParameter=<key>,<shell command>
#	See 'zabbix_agentd' directory for examples.
#
# 	Disabled. A configuration file should be placed on directory: <%= @include %>

### Option: ControlSocket
#       The control socket, used to send runtime commands with '-R' option.
#
# Mandatory: no
<% if @controlsocket %>ControlSocket=<%= @controlsocket %><% end %>

####### LOADABLE MODULES #######
<% if @kernel != 'windows' and !@agent2 %>
### Option: LoadModulePath
#	Full path to location of agent modules.
#	Default depends on compilation options.
#	To see the default path run command "zabbix_agentd --help".
#
# Mandatory: no
LoadModulePath=<%= @loadmodulepath %>
<% end %>

### Option: LoadModule
#	Module to load at agent startup. Modules are used to extend functionality of the agent.
#	Formats:
#		LoadModule=<module.so>
#		LoadModule=<path/module.so>
#		LoadModule=</abs_path/module.so>
#	Either the module must be located in directory specified by LoadModulePath or the path must precede the module name.
#	If the preceding path is absolute (starts with '/') then LoadModulePath is ignored.
#	It is allowed to include multiple LoadModule parameters.
#
# Mandatory: no
<% if @loadmodule %>LoadModule=<%= @loadmodule %><% end %>

####### TLS-RELATED PARAMETERS #######

### Option: TLSConnect
#	How the proxy should connect to Zabbix server. Used for an active proxy, ignored on a passive proxy.
#	Only one value can be specified:
#		unencrypted - connect without encryption
#		psk         - connect using TLS and a pre-shared key
#		cert        - connect using TLS and a certificate
#
# Mandatory: yes, if TLS certificate or PSK parameters are defined (even for 'unencrypted' connection)
<% if @tlsconnect %>TLSConnect=<%= @tlsconnect %><% end %>

### Option: TLSAccept
#	What incoming connections to accept from Zabbix server. Used for a passive proxy, ignored on an active proxy.
#	Multiple values can be specified, separated by comma:
#		unencrypted - accept connections without encryption
#		psk         - accept connections secured with TLS and a pre-shared key
#		cert        - accept connections secured with TLS and a certificate
#
# Mandatory: yes, if TLS certificate or PSK parameters are defined (even for 'unencrypted' connection)
<% if @tlsaccept %>TLSAccept=<%= [@tlsaccept].flatten.join(',') %><% end %>

### Option: TLSCAFile
#	Full pathname of a file containing the top-level CA(s) certificates for
#	peer certificate verification.
#
# Mandatory: no
<% if @tlscafile %>TLSCAFile=<%= @tlscafile %><% end %>

### Option: TLSCRLFile
#	Full pathname of a file containing revoked certificates.
#
# Mandatory: no
<% if @tlscrlfile %>TLSCRLFile=<%= @tlscrlfile %><% end %>

### Option: TLSServerCertIssuer
#      Allowed server certificate issuer.
#
# Mandatory: no
<% if @tlsservercertissuer %>TLSServerCertIssuer=<%= @tlsservercertissuer %><% end %>

### Option: TLSServerCertSubject
#      Allowed server certificate subject.
#
# Mandatory: no
<% if @tlsservercertsubject %>TLSServerCertSubject=<%= @tlsservercertsubject %><% end %>

### Option: TLSCertFile
#	Full pathname of a file containing the proxy certificate or certificate chain.
#
# Mandatory: no
<% if @tlscertfile %>TLSCertFile=<%= @tlscertfile %><% end %>

### Option: TLSKeyFile
#	Full pathname of a file containing the proxy private key.
#
# Mandatory: no
<% if @tlskeyfile %>TLSKeyFile=<%= @tlskeyfile %><% end %>

### Option: TLSPSKIdentity
#	Unique, case sensitive string used to identify the pre-shared key.
#
# Mandatory: no
<% if @tlspskidentity %>TLSPSKIdentity=<%= @tlspskidentity %><% end %>

### Option: TLSPSKFile
#	Full pathname of a file containing the pre-shared key.
#
# Mandatory: no
<% if @tlspskfile %>TLSPSKFile=<%= @tlspskfile %><% end %>

####### For advanced users - TLS ciphersuite selection criteria #######

### Option: TLSCipherCert13
#       Cipher string for OpenSSL 1.1.1 or newer in TLS 1.3.
#       Override the default ciphersuite selection criteria for certificate-based encryption.
#
# Mandatory: no
<% if @tlsciphercert13 %>TLSCipherCert13=<%= @tlsciphercert13 %><% end %>

### Option: TLSCipherCert
#       GnuTLS priority string or OpenSSL (TLS 1.2) cipher string.
#       Override the default ciphersuite selection criteria for certificate-based encryption.
#       Example for GnuTLS:
#               NONE:+VERS-TLS1.2:+ECDHE-RSA:+RSA:+AES-128-GCM:+AES-128-CBC:+AEAD:+SHA256:+SHA1:+CURVE-ALL:+COMP-NULL:+SIGN-ALL:+CTYPE-X.509
#       Example for OpenSSL:
#               EECDH+aRSA+AES128:RSA+aRSA+AES128
#
# Mandatory: no
<% if @tlsciphercert %>TLSCipherCert=<%= @tlsciphercert %><% end %>

### Option: TLSCipherPSK13
#       Cipher string for OpenSSL 1.1.1 or newer in TLS 1.3.
#       Override the default ciphersuite selection criteria for PSK-based encryption.
#       Example:
#               TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256
#
# Mandatory: no
<% if @tlscipherpsk13 %>TLSCipherPSK13=<%= @tlscipherpsk13 %><% end %>

### Option: TLSCipherPSK
#       GnuTLS priority string or OpenSSL (TLS 1.2) cipher string.
#       Override the default ciphersuite selection criteria for PSK-based encryption.
#       Example for GnuTLS:
#               NONE:+VERS-TLS1.2:+ECDHE-PSK:+PSK:+AES-128-GCM:+AES-128-CBC:+AEAD:+SHA256:+SHA1:+CURVE-ALL:+COMP-NULL:+SIGN-ALL
#       Example for OpenSSL:
#               kECDHEPSK+AES128:kPSK+AES128
#
# Mandatory: no
<% if @tlscipherpsk %>TLSCipherPSK=<%= @tlscipherpsk %><% end %>

### Option: TLSCipherAll13
#       Cipher string for OpenSSL 1.1.1 or newer in TLS 1.3.
#       Override the default ciphersuite selection criteria for certificate- and PSK-based encryption.
#       Example:
#               TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256
#
# Mandatory: no
<% if @tlscipherall13 %>TLSCipherAll13=<%= @tlscipherall13 %><% end %>

### Option: TLSCipherAll
#       GnuTLS priority string or OpenSSL (TLS 1.2) cipher string.
#       Override the default ciphersuite selection criteria for certificate- and PSK-based encryption.
#       Example for GnuTLS:
#               NONE:+VERS-TLS1.2:+ECDHE-RSA:+RSA:+ECDHE-PSK:+PSK:+AES-128-GCM:+AES-128-CBC:+AEAD:+SHA256:+SHA1:+CURVE-ALL:+COMP-NULL:+SIGN-ALL:+CTYPE-X.509
#       Example for OpenSSL:
#               EECDH+aRSA+AES128:RSA+aRSA+AES128:kECDHEPSK+AES128:kPSK+AES128
#
# Mandatory: no
<% if @tlscipherall %>TLSCipherAll=<%= @tlscipherall %><% end %>
